@model ModelLayer.DTO.UsuarioViewModel

@using (Html.BeginForm("Create", "Usuarios", FormMethod.Post, new { id = "createUsuarioForm" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-header bg-primary text-white">
        <h5 class="modal-title">Agregar Usuario</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
    </div>

    <div class="modal-body">
        <div class="mb-3">
            @Html.LabelFor(m => m.NombreUsuario, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.NombreUsuario, new { @class = "form-control", required = "required", placeholder = "Ingrese el nombre de usuario" })
            @Html.ValidationMessageFor(m => m.NombreUsuario, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Contraseña, new { @class = "form-label" })
            @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", required = "required", placeholder = "Ingrese la contraseña" })
            @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Rol, new { @class = "form-label" })
            @Html.DropDownListFor(m => m.Rol, new SelectList(new[] { "Admin", "Cliente" }), "-- Seleccione un Rol --", new { @class = "form-select", required = "required" })
            @Html.ValidationMessageFor(m => m.Rol, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="submit" id="submitCreateUsuario" class="btn btn-success">Guardar</button>
    </div>
}