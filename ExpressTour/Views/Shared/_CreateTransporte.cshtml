@model ModelLayer.DTO.TransporteViewModel

<div class="modal-header bg-primary text-white">
    <h5 class="modal-title">Crear Transporte</h5>
    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
</div>

@using (Html.BeginForm("CreateTransporte", "Paquetes", FormMethod.Post, new { id = "createTransporteForm" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="mb-3">
            @Html.LabelFor(m => m.Tipo, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Tipo, new { @class = "form-control", placeholder = "Ingrese el tipo de transporte", required = "required" })
            @Html.ValidationMessageFor(m => m.Tipo)
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Capacidad, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Capacidad, new { @class = "form-control", placeholder = "Ingrese la capacidad", type = "number", required = "required" })
            @Html.ValidationMessageFor(m => m.Capacidad)
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.IdProveedor, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.IdProveedor, new { @class = "form-control", placeholder = "ID del proveedor", type = "number", required = "required" })
            @Html.ValidationMessageFor(m => m.IdProveedor)
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <!-- Botón de tipo "button" para que se capture vía AJAX -->
        <button type="button" id="submitTransporteAjax" class="btn btn-primary">Guardar Transporte</button>
    </div>
}
